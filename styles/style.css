/** @format */

#i_joi {
  height: 100%;
  width: 100%;
}

body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: black;
  z-index: -1;
}

* {
  font-family: Verdana, sans-serif;
}

.darkBackground {
  border-radius: 0.5em;
  padding: 0.5em;
}

.darkBackground:not(:empty) {
  background-color: #00000060;
}

#reactDrop {
  position: relative;
  z-index: 2000;
  overflow: visible;
  width: var(--default_width);
}

#btn_reactDD {
  width: 100%;
  margin: 0;
  grid-template-columns: auto auto;
  display: flex;
  text-overflow: ellipsis;
  overflow: hidden;
  align-items: center;
  justify-content: center;
}

#btn_reactDD > * {
  margin: 0;
  padding: 5px;
  min-height: 1em;
  float: left;
  display: table-cell;
}

#btn_reactDD_value {
  flex-grow: 1;
  text-align: center;
  width: auto;
  text-overflow: ellipsis;
  overflow: hidden;
}

#btn_reactDD_arrow {
  text-align: right;
  align-self: right;
  display: inline-block;
  display: block;
}

#reactDD {
  position: relative;
  height: 1px;

  visibility: hidden;
  width: 100%;
  max-width: 250px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 2001;
  margin-top: -0.25em;
}

#reactDD_scroll {
  max-height: 45vh;
  overflow-y: auto;
  overflow-x: hidden;
  scrollbar-width: none;
  margin-top: calc((1em + 20px) * -1);
}

.reactDD_scrollBtn {
  width: 100%;
  background-color: #222;
  color: white;
  min-height: var(--dd_item_height);
  padding: var(--dd_item_padding);
  border-radius: 0;
  z-index: 2002;
  position: relative;
}

.reactDD_scrollBtn:hover {
  color: white;
  background-color: #555;
}

#reactDD_scrollBtn_up {
}

#reactDD_scrollBtn_down {
  border-radius: 0 0 0.5em 0.5em;
}

/* #reactDD > div  > a */
.reactDD_litxt {
  background-color: #000000cf;
  display: block;
  color: white;
  padding: var(--dd_item_padding);
  overflow: hidden;
  text-decoration: none;
  text-overflow: ellipsis;
  white-space: normal;
  position: relative;
  text-align: center;
  min-height: var(--dd_item_height);
}

.reactDD_litxt:hover {
  background-color: gray;
}

#canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  margin-left: auto;
  margin-right: auto;
  z-index: 0;
  visibility: visible;
  overflow: hidden;
  display: flex;
  justify-content: center center;
  align-items: center center;
  text-align: center center;
  visibility: visible;
}

.bImg {
  z-index: 0;
  width: 100%;
  height: 100%;
}

#bVid {
  height: calc(100vh - 3vh);
  bottom: 3vh;
}

#reactText {
  position: relative;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: normal;
  padding: 0.5em;
}

#reactText:empty {
  margin: 0;
  padding: 0;
  height: 0;
  background-color: transparent;
}

.area {
  position: absolute;
  color: black;
  z-index: 100;
  overflow: visible;
  max-width: 33vw;
  border-radius: 0.25em;
}

.area:not(:empty) {
  background-color: rgba(100, 100, 100, 0.4);
}

.content {
  position: relative;
  white-space: nowrap;
  overflow: visible;
  display: flex;
  flex-direction: column;
  width: auto;
}

.content > *:first-child {
  margin-top: var(--content_outer_margin) !important;
}

.content > *:last-child {
  margin-bottom: var(--content_outer_margin) !important;
}

.content > * {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
  margin-left: var(--content_outer_margin);
  margin-right: var(--content_outer_margin);
  text-shadow: var(--text-shadow-x) var(--text-shadow-y) var(--text-shadow-blur)
    var(--text-shadow-color);
}

.content > p {
}

.content > button.p {
  text-shadow: none;
}

button {
  border: none;
  box-shadow: 0.05em 0.05em 0.25em 0px rgba(0, 0, 0, 0.2);
  border-radius: 0.25em;
}

button:enabled:hover {
  background-color: lightgrey;
}

#rtop-left {
  top: 10px;
  left: 10px;
  justify-content: left;
}

#rtop-center {
  top: 10px;
  left: 50vw;
  -ms-transform: translate(-50%, 0%);
  transform: translate(-50%, 0%);
  border-radius: 0.45em;
}

#top-center {
  justify-content: center;
  align-items: center;
  text-align: center;
}

#rcenter-center {
  top: 50vh;
  left: 50vw;
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  border-radius: 0.45em;
}

#center-center {
  justify-content: center;
  align-items: center;
  text-align: center;
}

#centerMessage {
}

#rtop-right {
  top: 10px;
  right: 10px;
  /*padding-right: 20px;*/
  justify-content: left;
}

#rbottom-left {
  bottom: 3vh;
  left: 10px;
  justify-content: left;
}

#rbottom-center {
  bottom: 3vh;
  left: 50vw;
  -ms-transform: translate(-50%, 0%);
  transform: translate(-50%, 0%);
  border-radius: 0.45em;
}

#bottom-center {
  justify-content: center;
  align-items: center;
  text-align: center;
}

#rbottom-right {
  bottom: 3vh;
  right: 10px;
  /*padding-right: 20px;*/
  display: flex;
  justify-content: left;
}

#buttons {
  align-items: center;
  display: flex;
  justify-content: center;
  flex-wrap: nowrap;
  padding: 0 10px 0 10px;
}

#buttons > button {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  margin: 0.25em;
  border-radius: 0.3em;
}

.text {
  margin: 0;
  z-index: 110;
  white-space: normal;
}

.tooltipBar {
  position: absolute;
  width: auto;
  display: flex;
  flex-direction: row;
  margin-top: 30px;
  z-index: 1000;
  visibility: hidden;
  overflow: visible;
  flex-wrap: nowrap;
}

.spacer {
  height: 0.1em;
  clear: both;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.tooltipItem,
.tooltipBar > p {
  position: absolute;
  background-color: rgba(30, 30, 30, 0.98);
  color: rgb(255, 255, 255);
  padding: 0.5rem;
  border-radius: 10px;
  width: auto;
  height: auto;
  z-index: 1001;
  visibility: collapse;
  white-space: nowrap;
  text-align: center center;
  margin: 0;
  margin-top: 0.25em;
  -ms-transform: translate(-25%, 0%);
  transform: translate(-25%, 0%);
}

.icon {
  width: 1.5em; /* Adjust size */
  height: 1.5em; /* Adjust size */
  vertical-align: middle; /* Align with text if needed */
}

.fav {
  color: rgb(217, 161, 31);
}

.addFav > svg > path {
  color: darkcyan;
}

#addFav {
  padding: 0.5em;
  width: var(--default_width);
}

#setBy {
  min-width: var(--default_width);
}

#setBy > svg {
  filter: drop-shadow(
    var(--text-shadow-x) var(--text-shadow-y) var(--text-shadow-blur)
      var(--text-shadow-color)
  );
}

.linkRow {
  /*top right bottom left*/
  margin: 0.2em 0 0.2em 4px;
  white-space: nowrap;
  /*overflow: hidden;*/
  display: flex;
  max-width: 100%;
}

.setterLink {
  display: flex;
  flex-wrap: nowrap;
  width: 100%;
}

.linkText {
  display: inline-block;
  white-space: nowrap;
  border-radius: 0.5em;
  text-overflow: ellipsis;
  overflow: hidden;
  margin: 0;
  flex-grow: 1;
  padding: 2px;
}

.linkText > span {
  white-space: nowrap;
  text-overflow: ellipsis;
  padding: 0.2em;
}

.linkText:hover {
  overflow: visible;
  padding: 0.25em;
  white-space: wrap;
}

.linkText:hover > span {
  overflow: visible;
  white-space: wrap;
}

.linkRow::before {
  position: relative;
  bottom: 0.4em;
  display: inline-block;
  color: white;
  border-left: 2px solid white;
  border-bottom: 1px solid white;
  width: 4px;
  overflow: visible;
  flex-shrink: 0;
}

.setterLink:first-child > .linkRow::before {
  content: ''; /*↳ ⌞ ∟ ⨽ ⊢*/
  height: 1.2em;
  margin-top: -0em;
}

.setterLink > .linkRow::before {
  content: ''; /*↳ ⌞ ∟ ⨽ ⊢*/
}

.setterLink > .linkRow::before,
.setterLink:last-child > .linkRow::before {
  height: 2.4em;
  margin-top: -1em;
}

.setterLink:last-child > .linkRow::before {
  content: ''; /*↳ ⌞ ∟ ⨽ ⊢*/
  /*border-radius: 1em;*/
}

.linkNumber {
  color: black;
  background-color: white;
  border-radius: 0.4em;
  padding: 0.2em 0.5em 0.2em 0.5em;
  font-size: 0.8em;
  font-weight: bold;
  font-family: Arial, sans-serif;
  text-shadow: none;
  flex-shrink: 0;
  align-self: flex-start;
  margin-left: -0.4em;
}

#LinksHeader {
  font-size: 1.3em;
  padding-bottom: 0.1em;
}

#LinkTree {
  list-style: none;
  margin: 0;
  padding: 0 0.1em 0 0.4em;
  padding-top: 0.25em;
  margin: 0.1em 0.2em 0.1em 0.4em;
  border-top: 2px solid rgb(255 255 255 / 17%);
}

#LinksHeader > i,
#LinksHeader > svg {
  color: white;
  border-radius: 0.5em;
  padding: 0.2em;
}

#LinksHeader > i:not(.transparent):hover,
#LinksHeader > svg:not(.transparent):hover {
  background-color: #00000040;
}

#linkIcon {
  font-size: 1.2em;
  margin: 0;
  padding-right: 0.5em !important;
  margin-right: -0.4em;
}

#messageIcon {
  font-size: 1em;
  padding: 0.35em 0.5em 0.25em 0.35em !important;
  margin-right: -0.6em;
  margin-left: -0.4em;
}

.counter {
  position: relative;
  top: 0;
  left: -1.2em;
  margin: 0;
  padding: 0.1em 0.4em 0.1em 0.4em;
  font-size: 0.55em;
  border-radius: 0.3em;
  background-color: #333;
  color: white;
}

#linkCounter {
  left: -1.6em;
}

.online {
  color: rgb(91, 198, 83);
}

.offline {
  color: rgb(200, 50, 50);
}

.transparent {
  color: transparent !important;
}

.link-circle {
  position: relative;
  margin: 0;
  top: 0;
  right: -5px;
  font-size: 0.6em;
}

#responseType {
  padding-right: calc(0.5em - 3px); /*#reactText - custom*/
  border-right: 1px solid rgba(255, 255, 255, 0.458);
}

#responseText {
  padding-left: 0.5em; /*#reactText padding*/
}
